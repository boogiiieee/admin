[tool.poetry]
name = "publication-admin"
version = "0.1.0"
description = ""
authors = ["Backend Team <backend@docet.ai>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.11.x"
fastapi = "^0.104.1"
uvicorn = "^0.24.0.post1"
alembic = "^1.13.0"
pydantic-settings = "^2.1.0"
asyncpg = "^0.29.0"
greenlet = "^3.0.1"
pydantic = { extras = ["email"], version = "^2.5.2" }
fastapi-mail = "^1.4.1"
pyjwt = "^2.8.0"
pytest = "^7.4.3"
httpx = "^0.25.2"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
python-multipart = "^0.0.6"
boto3 = "^1.33.11"
loguru = "^0.7.2"
pytest-dotenv = "^0.5.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.7"

[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
# See definitions https://docs.astral.sh/ruff/rules/
select = [
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "E",     # pycodestyle errors
    "F",     # Pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "SIM",   # flake8-simplify
    "T20",   # flake8-print
    "TD",    # flake8-todos
]

[tool.ruff.flake8-bugbear]
# Allow FastAPI's dependency annotations
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
env_files = ["tests/.env.pytest"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
