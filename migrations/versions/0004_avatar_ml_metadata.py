"""avatar-ml-metadata

Revision ID: 0004
Revises: 0003
Create Date: 2023-12-15 17:00:24.898627

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0004"
down_revision: Union[str, None] = "0003"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
init_status_enum = sa.Enum("CREATED", "PENDING", "SUCCESS", name="initstatus")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    init_status_enum.create(op.get_bind())
    op.add_column("avatars", sa.Column("init_persona_task_id", sa.String(), nullable=True))
    op.add_column("avatars", sa.Column("init_status", init_status_enum, nullable=True, server_default="CREATED"))
    op.add_column("avatars", sa.Column("lora_path", sa.String(), nullable=True))
    op.add_column("avatars", sa.Column("profile_image", sa.String(), nullable=True))
    op.add_column("avatars", sa.Column("lora_name", sa.String(), nullable=True))
    op.create_unique_constraint("avatars_lora_name_unique_key", "avatars", ["lora_name"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("avatars_lora_name_unique_key", "avatars", type_="unique")
    op.drop_column("avatars", "lora_name")
    op.drop_column("avatars", "profile_image")
    op.drop_column("avatars", "lora_path")
    op.drop_column("avatars", "init_status")
    op.drop_column("avatars", "init_persona_task_id")
    init_status_enum.drop(op.get_bind())
    # ### end Alembic commands ###
